

1) 安装一些必要库
    $ sudo yum install curl-devel expat-devel gettext-devel \
    openssl-devel zlib-devel
    $ sudo apt-get install libcurl4-gnutls-dev libexpat1-dev gettext \
    libz-dev libssl-dev
2) github上拉取最新release代码；
    https://github.com/git/git/releases  
    wget 或者下载到本地再传到开发机
    wget https://github.com/git/git/archive/v2.19.0.tar.gz

3) 解压后进入目录内
    make configure
    ./configure --prefix=/usr/local/git
    make 
    make install

4) 增加git的可执行文件路径到环境变量
    sudo vi /etc/bashrc
    追加 export PATH=$PATH:/usr/local/git/bin 到末尾

5) tab自动补全
    如果你用的是 Bash shell，可以试试看 Git 提供的自动补全脚本。下载 Git 的源代码，进入 contrib/completion 目录，会看到一个 git-completion.bash 文件。将此文件复制到你自己的用户主目录中（译注：按照下面的示例，还应改名加上点：cp git-completion.bash ~/.git-completion.bash），并把下面一行内容添加到你的 .bashrc 文件中：
    source ~/.git-completion.bash

6) git 设置push时的name和email
    git config --global user.email "wjp1994721@163.com"
    git config --global user.name "jiapeng.wen"

7) Git可以将用户名，密码和仓库链接保存在硬盘中，而不用在每次push的时候都输入密码
    git config --global credential.helper store

8) git commit 规范

    a)安装npm
    目前来说node.js和npm集成在一起了，所以只要安装node.js，npm也会安装好；
    wget https://nodejs.org/dist/latest-v10.x/node-v10.11.0.tar.gz
    tar zxvf node-v10.11.0.tar.gz
    cd 
    ./configure --prefix=/usr/local/node
    sudo make (此步时间有些长, 可以 sudo make -j4)
    sudo make install
    node.js安装好了，检测一下安装效果(环境变量自己加一下)
    node --version  
    npm --version

    b) 更新npm(重要，不更新可能导致错误)
    sudo npm install -g npm@latest
    
    c)安装commitizen
    npm install -g commitizen
    //生存changelog的工具
    //npm install -g conventional-changelog
    //npm install -g conventional-changelog-cli
    //npm ls -g -depth=0 (出现安装的模块，不要报错)
    
    d)git repo设置
    进入git repo中,touch package.json
    npm init --yes
    commitizen init cz-conventional-changelog --save --save-exact
    conventional-changelog -p angular -i CHANGELOG.md -s
    然后就可以git cz 提交了代码，会有提示教你怎么做



    

    
    
    
    

*******************使用中出现的问题及解决方案******************************
1) 不能clone github代码，提示
    error setting certificate verify locations:
    CAfile: /usr/share/ssl/certs/ca-bundle.crt
    CApath: none

解决方案：git config --system http.sslverify false



    


